# Policy for the timekeep.c oneshot system service
# Gets called once during init by vendor timekeep.rc and restores
# clock from /sys/class/rtc/rtc0/since_epoch
type timekeep, domain;

# init_daemon_domain macro includes timekeep_exec
# and grants some transition permissions
init_daemon_domain(timekeep)
type timekeep_exec, exec_type, vendor_file_type, file_type;

# Grant permission to set system time and to set the real-time lock
allow timekeep self:capability { fowner sys_time };

# (initially from system_app for TimeKeep Java service)
# TODO: Seems not needed? Timekeep can write because it is root?
allow timekeep timekeep_vendor_data_file:dir create_dir_perms;
auditallow timekeep timekeep_vendor_data_file:dir create_dir_perms;
allow timekeep timekeep_vendor_data_file:file create_file_perms;
auditallow timekeep timekeep_vendor_data_file:file create_file_perms;

set_prop(timekeep, timekeep_prop)

# Needed because the open() call in timekeep.c will traverse parent
# folders as well
allow timekeep sysfs_msm_subsys:dir search;
# sysfs_rtc is not included in sysfs_msm_subsys!
allow timekeep sysfs_rtc:dir search;
allow timekeep sysfs_rtc:{ file lnk_file } r_file_perms;
