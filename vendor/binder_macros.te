# TODO: FOR REFERENCE
###########################################
# add_service(domain, service)
# Ability for domain to add a service to service_manager
# and find it. It also creates a neverallow preventing
# others from adding it.
# define(`add_service', `
#   allow $1 $2:service_manager { add find };
#   neverallow { domain -$1 } $2:service_manager add;
# ')
###########################################
# add_hwservice(domain, service)
# Ability for domain to add a service to hwservice_manager
# and find it. It also creates a neverallow preventing
# others from adding it.
# define(`add_hwservice', `
#   allow $1 $2:hwservice_manager { add find };
#   allow $1 hidl_base_hwservice:hwservice_manager add;
#   neverallow { domain -$1 } $2:hwservice_manager add;
# ')
#####################################
# binder_use(domain)
# Allow domain to use Binder IPC.
# define(`binder_use', `
# Call the servicemanager and transfer references to it.
# allow $1 servicemanager:binder { call transfer };
# servicemanager performs getpidcon on clients.
# allow servicemanager $1:dir search;
# allow servicemanager $1:file { read open };
# allow servicemanager $1:process getattr;
# rw access to /dev/binder and /dev/ashmem is presently granted to
# all domains in domain.te.
# ')
#####################################
# hwbinder_use(domain)
# Allow domain to use HwBinder IPC.
# define(`hwbinder_use', `
# Call the hwservicemanager and transfer references to it.
# allow $1 hwservicemanager:binder { call transfer };
# Allow hwservicemanager to send out callbacks
# allow hwservicemanager $1:binder { call transfer };
# hwservicemanager performs getpidcon on clients.
# allow hwservicemanager $1:dir search;
# allow hwservicemanager $1:file { read open };
# allow hwservicemanager $1:process getattr;
# rw access to /dev/hwbinder and /dev/ashmem is presently granted to
# all domains in domain.te.
# ')
#####################################
# vndbinder_use(domain)
# Allow domain to use Binder IPC.
# define(`vndbinder_use', `
# Talk to the vndbinder device node
# allow $1 vndbinder_device:chr_file rw_file_perms;
# Call the vndservicemanager and transfer references to it.
# allow $1 vndservicemanager:binder { call transfer };
# vndservicemanager performs getpidcon on clients.
# allow vndservicemanager $1:dir search;
# allow vndservicemanager $1:file { read open };
# allow vndservicemanager $1:process getattr;
# ')
#####################################
# binder_call(clientdomain, serverdomain)
# Allow clientdomain to perform binder IPC to serverdomain.
# define(`binder_call', `
# Call the server domain and optionally transfer references to it.
# allow $1 $2:binder { call transfer };
# Allow the serverdomain to transfer references to the client on the reply.
# allow $2 $1:binder transfer;
# Receive and use open files from the server.
# allow $1 $2:fd use;
# ')
#####################################
# binder_service(domain)
# Mark a domain as being a Binder service domain.
# Used to allow binder IPC to the various system services.
# define(`binder_service', `
# typeattribute $1 binderservicedomain;
# ')
#####################################
# tmpfs_domain(domain)
# Define and allow access to a unique type for
# this domain when creating tmpfs / shmem / ashmem files.
# define(`tmpfs_domain', `
# type $1_tmpfs, file_type;
# type_transition $1 tmpfs:file $1_tmpfs;
# allow $1 $1_tmpfs:file { read write getattr map };
# allow $1 tmpfs:dir { getattr search };
# ')
#####################################
# init_daemon_domain(domain)
# Set up a transition from init to the daemon domain
# upon executing its binary.
# define(`init_daemon_domain', `
# domain_auto_trans(init, $1_exec, $1)
# tmpfs_domain($1)
# ')
#####################################
# app_domain(domain)
# Allow a base set of permissions required for all apps.
# define(`app_domain', `
# typeattribute $1 appdomain;
# Label ashmem objects with our own unique type.
# tmpfs_domain($1)
# Map with PROT_EXEC.
# allow $1 $1_tmpfs:file execute;
# neverallow { $1 -shell } { domain -$1 }:file no_rw_file_perms;
# neverallow { appdomain -shell -$1 } $1:file no_rw_file_perms;
# ')
#####################################
# untrusted_app_domain(domain)
# Allow a base set of permissions required for all untrusted apps.
# define(`untrusted_app_domain', `
# typeattribute $1 untrusted_app_all;
# ')
#####################################
# net_domain(domain)
# Allow a base set of permissions required for network access.
# define(`net_domain', `
# typeattribute $1 netdomain;
# ')
