# Policy for the TimeKeep Java app. It listens to a BootReceiver
# or TIME_SET event and calculates the offset between the rtc clock
# in /sys/class/rtc0/since_epoch and the current device time and stores that
# value in /data/vendor/time/ats_2 and as persist.sys.timeadjust.
type timekeep_app, domain;

app_domain(timekeep_app)

# Needed to get access to /data/data/com.sony.timekeep
# Only getattr and search are requested since TimeKeep does not write to its own directory
# /data/data/com.sony.timekeep only has two empty subdirs
dontaudit timekeep_app app_data_file:dir { getattr search };

# TODO: Can't find audits for this
# Probably because it is a BootReceiver oneshot and can't be started in
# background? Or because apps already have access to their own services?
#add_service(timekeep_app, timekeep_service)
#userdebug_or_eng(`
#  auditallow timekeep_app timekeep_service:service_manager { add find };
#')

allow timekeep_app activity_service:service_manager find;

# Read from /data/vendor/time/ats_2
allow timekeep_app timekeep_vendor_data_file:dir create_dir_perms;
allow timekeep_app timekeep_vendor_data_file:file create_file_perms;

# Read /sys/class/rtc/rtc0/since_epoch
allow timekeep_app sysfs_rtc:dir { search };
allow timekeep_app sysfs_rtc:{ file lnk_file } r_file_perms;
allow timekeep_app sysfs_msm_subsys:dir search;
auditallow timekeep_app sysfs_msm_subsys:dir search;
# TODO(b/sysfs_rtc): Remove once confirmed it was sysfs_rtc mislabeling
# -> nope, still wants to search parent folders of linked dirs
# avc: granted { search } for name="400f000.qcom,spmi" dev="sysfs" ino=19045 scontext=u:r:timekeep_app:s0 tcontext=u:object_r:sysfs_msm_subsys:s0 tclass=dir

# Set the persist.sys.timeadjust property
set_prop(timekeep_app, timekeep_prop)
