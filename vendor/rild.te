# TODO(b/vndswitch): Remove once per_mgr/rild exclusively use vendor binder
# and do not try to add and interact with service_manager types
typeattribute rild binder_in_vendor_violators_fake;

vndbinder_use(rild)
# TODO(b/vndswitch): Remove once per_mgr uses vendor binder
binder_use(rild)

binder_call(rild, per_mgr)
binder_call(rild, qcrilam_app);

allow rild per_mgr_service:service_manager find;
# included in:
#use_per_mgr(rild)

# TODO: Needed? -> seems not
#binder_call(rild, vnd_qcrilhook_hwservice);
#userdebug_or_eng(`
#  auditallow rild vnd_qcrilhook_hwservice:binder { call transfer };
#  auditallow vnd_qcrilhook_hwservice rild:binder { transfer };
#  auditallow rild vnd_qcrilhook_hwservice:fd use;
#')

# /data/vendor/radio/qcril.db etc.
allow rild radio_vendor_data_file:dir create_dir_perms;
allow rild radio_vendor_data_file:file create_file_perms;

# odm/radio/qcril_database/qcril.db
# TODO: convert to allowxperm for ioctl
allow rild vendor_file:file { ioctl lock };
# -> get ioctl via auditd!
userdebug_or_eng(`
  auditallow rild vendor_file:file { ioctl lock };
')

allow rild qmuxd_socket:dir w_dir_perms;
allow rild qmuxd_socket:sock_file create_file_perms;
unix_socket_connect(rild, qmuxd, qmuxd)

allow rild netmgrd_socket:dir search;
unix_socket_connect(rild, netmgrd, netmgrd)

add_hwservice(rild, vnd_ims_radio_hwservice)
# TODO: Added upstream, but is it actually needed? Seems not so on tone
add_hwservice(rild, vnd_qcrilhook_hwservice)
userdebug_or_eng(`
  auditallow rild vnd_qcrilhook_hwservice:hwservice_manager { add find };
  auditallow rild hidl_base_hwservice:hwservice_manager { add find };
')

set_prop(rild, vendor_radio_prop)

# avc: denied { ioctl } for comm="rild" path="socket:[52646]" dev="sockfs" ino=52646 ioctlcmd=0xc304 scontext=u:r:rild:s0 tcontext=u:r:rild:s0 tclass=socket
# avc: denied { ioctl } for comm="rild" path="socket:[25459]" dev="sockfs" ino=25459 ioctlcmd=0xc302 scontext=u:r:rild:s0 tcontext=u:r:rild:s0 tclass=socket
allow rild self:socket ioctl;
# TODO: Can be narrowed down to 0xc302 and 0xc304?
allowxperm rild self:socket ioctl msm_sock_ipc_ioctls;

hal_server_domain(rild, hal_secure_element)
