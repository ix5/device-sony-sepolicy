# symlink /sdcard to backing block
allow init tmpfs:lnk_file create;
allow init configfs:file rw_file_perms;
allow init configfs:lnk_file { create unlink };

allow init { firmware_file bt_firmware_file persist_file qdsp_file }:dir mounton;
allow init { vendor_firmware_file }:dir mounton;
# avc: denied { relabelfrom } for comm="init" scontext=u:r:init:s0 tcontext=u:object_r:firmware_file:s0 tclass=filesystem
# avc: denied { associate } for comm="init" scontext=u:object_r:firmware_file:s0 tcontext=u:object_r:firmware_file:s0 tclass=filesystem
# avc: denied { mount } for comm="init" name="/" dev="mmcblk0p31" ino=1 scontext=u:r:init:s0 tcontext=u:object_r:firmware_file:s0 tclass=filesystem
#allow init { firmware_file }:filesystem { relabelfrom associate mount };

dontaudit init kernel:system module_request;

# Ignore all accidental O_CREAT open() calls on unsupported filesystems:
dontaudit init { sysfs_type proc_type }:file create;

# avc: granted { execute } for comm="init" name="msm_irqbalance" dev="mmcblk0p53" ino=246 scontext=u:r:init:s0 tcontext=u:object_r:msm_irqbalance_exec:s0 tclass=file
allow init msm_irqbalance_exec:file execute;

# Allow the init process to read and write default_smp_affinity:
allow init proc_irq:file rw_file_perms;
allow init mnt_vendor_file:dir mounton;
allow init qdsp_file:lnk_file read;

# avc: denied { write open } for path="/dev/cpuset/system-background/tasks" dev="tmpfs" ino=19643 scontext=u:r:init:s0 tcontext=u:object_r:cpuset_device:s0 tclass=file
#allow init cpuset_device:file { mounton create write open };
# avc: denied { mounton } for comm="init" path="/dev/cpuset" dev="tmpfs" ino=2678 scontext=u:r:init:s0 tcontext=u:object_r:cpuset_device:s0 tclass=dir
#allow init cpuset_device:dir mounton;
allow init device:dir mounton;
allow init device:file { write open };

# enable_ramdumps:
allow init sysfs_msm_subsys_restart:file rw_file_perms;

allow init nativetest_data_file:dir { getattr open read };
allow init nativetest_data_file:file getattr;
# TODO: Narrow this down
allow init sysfs_msm_subsys:file { open setattr write };
auditallow init sysfs_msm_subsys:file { open setattr write };
