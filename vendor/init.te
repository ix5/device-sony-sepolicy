# symlink /sdcard to backing block
allow init tmpfs:lnk_file create;

allow init { mnt_vendor_file vendor_firmware_file qdsp_file }:dir mounton;
allow init vendor_firmware_file:filesystem { mount relabelfrom };

# TODO: vendor_firmware_file is wrong right now
# TODO: Keep an eye on this during the /persist/ -> /mnt/vendor/persist etc transitions
# avc: denied { relabelfrom } for comm="init" scontext=u:r:init:s0 tcontext=u:object_r:firmware_file:s0 tclass=filesystem
# avc: denied { associate } for comm="init" scontext=u:object_r:firmware_file:s0 tcontext=u:object_r:firmware_file:s0 tclass=filesystem
# avc: denied { mount } for comm="init" name="/" dev="mmcblk0p31" ino=1 scontext=u:r:init:s0 tcontext=u:object_r:firmware_file:s0 tclass=filesystem
#allow init { firmware_file }:filesystem { relabelfrom associate mount };
# TODO: Remove all other file/dir/fs types apart from mnt_vendor_file eventually?
#allow init mnt_vendor_file:dir mounton;
#allow init { vendor_firmware_file }:dir mounton;
allow init qdsp_file:lnk_file read;

dontaudit init kernel:system module_request;

# Ignore all accidental O_CREAT open() calls on unsupported filesystems:
dontaudit init { sysfs_type proc_type }:file create;

# avc: granted { execute } for comm="init" name="msm_irqbalance" dev="mmcblk0p53" ino=246 scontext=u:r:init:s0 tcontext=u:object_r:msm_irqbalance_exec:s0 tclass=file
allow init msm_irqbalance_exec:file execute;

# Allow the init process to read and write default_smp_affinity:
allow init proc_irq:file rw_file_perms;

# avc: granted { getattr } for comm="init" path="/dev" dev="tmpfs" ino=12662 scontext=u:r:init:s0 tcontext=u:object_r:device:s0 tclass=dir
# avc: granted { write } for comm="init" name="/" dev="tmpfs" ino=14067 scontext=u:r:init:s0 tcontext=u:object_r:device:s0 tclass=dir
# avc: granted { mounton } for comm="init" path="/dev/usb-ffs/adb" dev="tmpfs" ino=20822 scontext=u:r:init:s0 tcontext=u:object_r:device:s0 tclass=dir
allow init device:dir { mounton rw_dir_perms };
# avc: granted { write open } for comm="init" path="/dev/cpuset/system-background/tasks" dev="tmpfs" ino=2578 scontext=u:r:init:s0 tcontext=u:object_r:device:s0 tclass=file
allow init device:file rw_file_perms;

# TODO: Narrow this down
allow init sysfs_msm_subsys:file { open setattr write };
userdebug_or_eng(`
  auditallow init sysfs_msm_subsys:file { open setattr write };
')
# Enable_ramdumps:
allow init sysfs_msm_subsys_restart:file rw_file_perms;

allow init nativetest_data_file:dir { getattr open read };
allow init nativetest_data_file:file getattr;
