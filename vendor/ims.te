type ims, domain;
type ims_exec, exec_type, vendor_file_type, file_type;

init_daemon_domain(ims)
net_domain(ims)

get_prop(ims, hwservicemanager_prop)
set_prop(ims, qcom_ims_prop)

# For reference:
# define(`unix_socket_connect', `
# allow $1 $2_socket:sock_file write;
# allow $1 $3:unix_stream_socket connectto;
# ')
unix_socket_connect(ims, netmgrd, netmgrd)
unix_socket_connect(ims, qmuxd, qmuxd)
unix_socket_connect(ims, property, init)
# TODO: Port this over to common
# avc: granted { connectto } for comm="imsdatadaemon" path="/dev/socket/property_service" scontext=u:r:ims:s0 tcontext=u:r:init:s0 tclass=unix_stream_socket
# avc: granted { connectto } for comm="imsdatadaemon" path="/dev/socket/property_service" scontext=u:r:ims:s0 tcontext=u:r:init:s0 tclass=unix_stream_socket
# avc: granted { connectto } for path="/dev/socket/property_service" scontext=u:r:ims:s0 tcontext=u:r:init:s0 tclass=unix_stream_socket
auditallow ims init:unix_stream_socket connectto;
# avc: granted { write } for comm="imsdatadaemon" name="property_service" dev="tmpfs" ino=13656 scontext=u:r:ims:s0 tcontext=u:object_r:property_socket:s0 tclass=sock_file
# avc: granted { write } for comm="imsdatadaemon" name="property_service" dev="tmpfs" ino=14097 scontext=u:r:ims:s0 tcontext=u:object_r:property_socket:s0 tclass=sock_file
# avc: granted { write } for comm="imsqmidaemon" name="property_service" dev="tmpfs" ino=14097 scontext=u:r:ims:s0 tcontext=u:object_r:property_socket:s0 tclass=sock_file
# avc: granted { write } for name="property_service" dev="tmpfs" ino=14097 scontext=u:r:ims:s0 tcontext=u:object_r:property_socket:s0 tclass=sock_file
auditallow ims property_socket:sock_file write;

allow ims self:capability net_bind_service;

allow ims self:socket create_socket_perms;
allow ims ims_socket:sock_file write;
allow ims self:netlink_generic_socket create_socket_perms_no_ioctl;
allow ims netmgrd_socket:dir search;
allow ims netmgrd_socket:sock_file w_file_perms;
allowxperm ims self:socket ioctl msm_sock_ipc_ioctls;
allowxperm ims self:udp_socket ioctl RMNET_IOCTL_EXTENDED;

allow ims qmuxd_socket:dir create_dir_perms;
allow ims qmuxd_socket:sock_file create_file_perms;

r_dir_file(ims, sysfs_msm_subsys)
r_dir_file(ims, sysfs_soc)

hwbinder_use(ims)

dontaudit ims kernel:system module_request;
