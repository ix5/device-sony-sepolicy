allow platform_app nfc_service:service_manager find;

# avc: denied { call } for comm="om.sony.qcrilam" scontext=u:r:platform_app:s0:c512,c768 tcontext=u:r:rild:s0 tclass=binder
# om.sony.qcrilam: type=1400 audit(0.0:24): avc: denied { call } for scontext=u:r:platform_app:s0:c512,c768 tcontext=u:r:rild:s0 tclass=binder
# avc: denied { transfer } for comm="om.sony.qcrilam" scontext=u:r:platform_app:s0:c512,c768 tcontext=u:r:rild:s0 tclass=binder
# om.sony.qcrilam: type=1400 audit(0.0:25): avc: denied { transfer } for scontext=u:r:platform_app:s0:c512,c768 tcontext=u:r:rild:s0 tclass=binder

# Allow platform apps(i.e. com.sony.qcrilam) to interact with qcrilam hidl hwservice
#add_hwservice(platform_app, vnd_qcrilhook_hwservice)
#auditallow platform_app vnd_qcrilhook_hwservice:hwservice_manager { find add };
allow platform_app vnd_qcrilhook_hwservice:hwservice_manager find;
auditallow platform_app vnd_qcrilhook_hwservice:hwservice_manager find;
# Very broad, but google does it like this as well
# See marlin sepolicy
binder_call(platform_app, rild);
auditallow platform_app rild:binder { call transfer };
auditallow rild platform_app:binder { transfer };

binder_call(platform_app, per_mgr)
auditallow platform_app per_mgr:binder { call transfer };
auditallow per_mgr platform_app:binder { transfer };
